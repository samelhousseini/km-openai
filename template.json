{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
       "ResourceSuffix": {
            "type": "string",
            "metadata": {
            "description": "provide a 2-13 character suffix for all resources."
            }
        },
        "DeployNewOpenAIResource": {
            "defaultValue": "no",
            "type": "String",
            "allowedValues": ["yes", "no"],
             "metadata": {
                "description": "If 'no', then please supply the endpoint and key of the existing OpenAI resource in the below two fields. If 'yes', then please choose the location of the new OpenAI resource."
            }
        },
        "ExistingOpenAIResourceEndpoint": {
            "defaultValue": "",    
            "type": "String"
        },
        "ExistingOpenAIResourceKey": {
            "defaultValue": "",   
            "type": "String"
        },
        "NewOpenAIResource": {
            "defaultValue": "[concat('oai', parameters('ResourceSuffix'))]",   
            "type": "String"
        },
        "NewOpenAIResourceLocation": {
            "type": "string",
            "defaultValue": "westeurope",
            "allowedValues": [
                "westeurope",
                "eastus",
                "southcentralus"
                ]
        },
        "DeployNewRedisResource": {
            "defaultValue": "no",
            "type": "String",
            "allowedValues": ["yes", "no"],
             "metadata": {
                "description": "If 'no', then please supply the endpoint and key of the existing Redis resource in the below two fields."
            }
        },
        "ExistingRedisResourceEndpoint": {
            "defaultValue": "",    
            "type": "String"
        },
        "ExistingRedisResourceKey": {
            "defaultValue": "",   
            "type": "String"
        },
        "ExistingRedisResourcePort": {
            "defaultValue": "10000",
            "type": "String"
        },
        "RedisEnterprise": {
            "defaultValue":  "[concat('redisdb', parameters('ResourceSuffix'))]", 
            "type": "String"
        },
        "FunctionApp": {
            "defaultValue": "[concat('funcapp', parameters('ResourceSuffix'))]", 
            "type": "String"
        },
        "ServerFarm": {
            "defaultValue": "[concat('servfarm', parameters('ResourceSuffix'))]",  
            "type": "String"
        },
        "CognitiveSearch": {
            "defaultValue": "[concat('search', parameters('ResourceSuffix'))]",  
            "type": "String"
        },
        "StorageAccount": {
            "defaultValue": "[replace(concat('storage', parameters('ResourceSuffix')), '-', '')]",  
            "type": "String"
        },
        "EventGrid": {
            "defaultValue": "[concat('evgrid', parameters('ResourceSuffix'))]",   
            "type": "String"
        },
        "ServiceBus": {
            "defaultValue": "[concat('bus', parameters('ResourceSuffix'))]",   
            "type": "String"
        },
        "CognitiveServices": {
            "defaultValue": "[concat('cogserv', parameters('ResourceSuffix'))]",   
            "type": "String"
        },
        "Cosmos": {
            "defaultValue": "[concat('cosmos', parameters('ResourceSuffix'))]",
            "type": "String"
        },
        "Translator": {
            "defaultValue": "[concat('trsltr', parameters('ResourceSuffix'))]",
            "type": "String"
        }

        
    },
    "variables": {


    },
    "resources": [
        {
            "condition": "[equals(parameters('DeployNewRedisResource'), 'yes')]",
            "type": "Microsoft.Cache/redisEnterprise",
            "apiVersion": "2022-01-01",
            "name": "[parameters('RedisEnterprise')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Enterprise_E10",
                "capacity": 2
            },
            "properties": {
                "minimumTlsVersion": "1.2"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2022-12-01",
            "name": "[parameters('CognitiveServices')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S0"
            },
            "kind": "CognitiveServices",
            "identity": {
                "type": "None"
            },
            "properties": {
                "apiProperties": {},
                "customSubDomainName": "[parameters('CognitiveServices')]",
                "networkAcls": {
                    "defaultAction": "Allow",
                    "virtualNetworkRules": [],
                    "ipRules": []
                },
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "condition": "[equals(parameters('DeployNewOpenAIResource'), 'yes')]",
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2022-12-01",
            "name": "[parameters('NewOpenAIResource')]", 
            "location":  "[parameters('NewOpenAIResourceLocation')]", 
            "sku": {
                "name": "S0"
            },
            "kind": "OpenAI",
            "properties": {
                "customSubDomainName": "[parameters('NewOpenAIResource')]",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2022-12-01",
            "name": "[parameters('Translator')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S1"
            },
            "kind": "TextTranslation",
            "identity": {
                "type": "None"
            },
            "properties": {
                "customSubDomainName": "[parameters('Translator')]",
                "networkAcls": {
                    "defaultAction": "Allow",
                    "virtualNetworkRules": [],
                    "ipRules": []
                },
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2022-11-15",
            "name": "[parameters('Cosmos')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enablePartitionMerge": false,
                "minimalTlsVersion": "Tls",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8,
                        "backupStorageRedundancy": "Geo"
                    }
                },
                "networkAclBypassResourceIds": [],
                "keysMetadata": {}
            }
        },
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2022-09-01",
            "name": "[parameters('CognitiveSearch')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "standard"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "Default",
                "publicNetworkAccess": "Enabled",
                "networkRuleSet": {
                    "ipRules": []
                },
                "disableLocalAuth": false,
                "authOptions": {
                    "apiKeyOnly": {}
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2022-10-01-preview",
            "name": "[parameters('ServiceBus')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "premiumMessagingPartitions": 0,
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[parameters('StorageAccount')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('ServerFarm')]",
            "location": "West Europe",
            "sku": {
                "name": "B2",
                "tier": "Basic",
                "size": "B2",
                "family": "B",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "condition": "[equals(parameters('DeployNewRedisResource'), 'yes')]",
            "type": "Microsoft.Cache/redisEnterprise/databases",
            "apiVersion": "2022-01-01",
            "name": "[concat(parameters('RedisEnterprise'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/redisEnterprise', parameters('RedisEnterprise'))]"
            ],
            "properties": {
                "clientProtocol": "Encrypted",
                "port": 10000,
                "clusteringPolicy": "EnterpriseCluster",
                "evictionPolicy": "NoEviction",
                "modules": [
                    {
                        "name": "RediSearch"
                    }
                ],
                "persistence": {
                    "aofEnabled": true,
                    "rdbEnabled": false,
                    "aofFrequency": "always"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2022-11-15",
            "name": "[concat(parameters('Cosmos'), '/KM_OAI_DB')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos'))]"
            ],
            "properties": {
                "resource": {
                    "id": "KM_OAI_DB"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2022-11-15",
            "name": "[concat(parameters('Cosmos'), '/00000000-0000-0000-0000-000000000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Reader",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2022-11-15",
            "name": "[concat(parameters('Cosmos'), '/00000000-0000-0000-0000-000000000002')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Contributor",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2022-06-15",
            "name": "[parameters('EventGrid')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]",
                "topicType": "Microsoft.Storage.StorageAccounts"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/authorizationrules",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('ServiceBus'), '/RootManageSharedAccessKey')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBus'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/networkRuleSets",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('ServiceBus'), '/default')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBus'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Allow",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-10-01-preview",
            "name": "[concat(parameters('ServiceBus'), '/km-oai-processing-queue')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBus'))]" 
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 5120,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 1,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "changeFeed": {
                    "enabled": false
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('FunctionApp')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('ServerFarm'))]"
            ],
            "tags": {
                  },
            "kind": "functionapp,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('FunctionApp'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('FunctionApp'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('ServerFarm'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "PYTHON|3.9",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1,
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "TRANSLATION_ENDPOINT",
                            "value": "https://api.cognitive.microsofttranslator.com"
                        },
                        {
                            "name": "TRANSLATION_API_KEY",
                            "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('Translator')), '2021-10-01').key1]"
                        }, 
                        {
                            "name": "TRANSLATION_LOCATION",
                            "value": "[resourceGroup().location]"
                        },
                        {
                            "name": "COG_SERV_ENDPOINT",
                            "value": "[concat('https://', parameters('CognitiveServices'), '.cognitiveservices.azure.com/')]"
                        },
                        {
                            "name": "COG_SERV_KEY",
                            "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('CognitiveServices')), '2021-10-01').key1]"
                        }, 
                        {
                            "name": "OPENAI_RESOURCE_ENDPOINT",
                            "value": "[if(equals(parameters('DeployNewOpenAIResource'),'yes'), concat('https://', parameters('NewOpenAIResource'), '.openai.azure.com/'),  parameters('ExistingOpenAIResourceEndpoint'))]"  
                        },
                        {
                            "name": "OPENAI_API_KEY",
                            "value": "[if(equals(parameters('DeployNewOpenAIResource'),'yes'), listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('NewOpenAIResource')), '2021-10-01').key1,  parameters('ExistingOpenAIResourceKey'))]"  
                        },
                        {
                            "name": "KB_BLOB_CONN_STR",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccount'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount')), '2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "COSMOS_URI",
                            "value": "[concat('https://', parameters('Cosmos'),'.documents.azure.com:443/')]"
                        },
                        {
                            "name": "COSMOS_KEY",
                            "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos')), '2022-05-15').primaryMasterKey]"
                        },
                        {
                            "name": "COG_SEARCH_ENDPOINT",
                            "value": "[concat('https://', parameters('CognitiveSearch'), '.search.windows.net')]" 
                        },
                        {
                            "name": "SERVICEBUS_CONN_STR",
                            "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules/', parameters('ServiceBus'),  'RootManageSharedAccessKey'), '2021-11-01').primaryConnectionString]"
                        },
                        {
                            "name": "REDIS_PASSWORD",
                            "value": "[ if(equals(parameters('DeployNewRedisResource'),'yes'), listKeys(resourceId('Microsoft.Cache/RedisEnterprise/databases', parameters('RedisEnterprise'),  'default'), '2022-01-01').primaryKey, parameters('ExistingRedisResourceKey'))]"
                        }, 
                        {
                            "name": "REDIS_ADDR",
                            "value": "[ if(equals(parameters('DeployNewRedisResource'),'yes'), concat( parameters('RedisEnterprise'), '.', resourceGroup().location, '.redisenterprise.cache.azure.net'), parameters('ExistingRedisResourceEndpoint'))]"
                        }, 
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        } ,
                        {
                            "name": "WEBSITE_MAX_DYNAMIC_APPLICATION_SCALE_OUT",
                            "value": "1"
                        } ,
                        {
                            "name": "KB_INDEX_NAME",
                            "value": "km-openai"
                        } ,
                        {
                            "name": "KB_INDEXER_NAME",
                            "value": "km-openai-indexer"
                        } ,
                        {
                            "name": "KB_DATA_SOURCE_NAME",
                            "value": "km-openai-docs"
                        } ,
                        {
                            "name": "KB_SKILLSET_NAME",
                            "value": "km-openai-skills"
                        } ,
                        {
                            "name": "DATABASE_MODE",
                            "value": "0"
                        } ,
                        {
                            "name": "REDIS_PORT",
                            "value": "[parameters('ExistingRedisResourcePort')]"
                        } ,
                        {
                            "name": "REDIS_INDEX_NAME",
                            "value": "acs_emb_index"
                        } ,
                        {
                            "name": "VECTOR_FIELD_IN_REDIS",
                            "value": "item_vector"
                        } ,
                        {
                            "name": "NUMBER_PRODUCTS_INDEX",
                            "value": "1000"
                        } ,
                        {
                            "name": "CATEGORYID",
                            "value": "KM_OAI_CATEGORY"
                        } ,
                        {
                            "name": "COSMOS_DB_NAME",
                            "value": "KM_OAI_DB"
                        } ,
                        {
                            "name": "KB_BLOB_CONTAINER",
                            "value": "kmoaidemo"
                        } ,
                        {
                            "name": "OUTPUT_BLOB_CONTAINER",
                            "value": "kmoaiprocessed"
                        } ,
                        {
                            "name": "CHOSEN_QUERY_EMB_MODEL",
                            "value": "text-embedding-ada-002"
                        } ,
                        {
                            "name": "CHOSEN_COMP_MODEL",
                            "value": "text-davinci-003"
                        } ,
                        {
                            "name": "MAX_QUERY_TOKENS",
                            "value": "500"
                        } ,
                        {
                            "name": "MAX_OUTPUT_TOKENS",
                            "value": "500"
                        } ,
                        {
                            "name": "OVERLAP_TEXT",
                            "value": "80"
                        } ,
                        {
                            "name": "ADA_002_EMBED_NUM_DIMS",
                            "value": "1536"
                        } ,
                        {
                            "name": "ADA_002_MODEL_MAX_TOKENS",
                            "value": "2047"
                        } ,
                        {
                            "name": "ADA_002_EMBEDDING_MODEL",
                            "value": "text-embedding-ada-002"
                        } ,
                        {
                            "name": "ADA_EMBEDDING_ENCODING",
                            "value": "cl100k_base"
                        } ,
                        {
                            "name": "DAVINCI_003_EMBED_NUM_DIMS",
                            "value": "12288"
                        } ,
                        {
                            "name": "DAVINCI_003_MODEL_MAX_TOKENS",
                            "value": "4000"
                        } ,
                        {
                            "name": "DAVINCI_003_EMB_MAX_TOKENS",
                            "value": "2047"
                        } ,
                        {
                            "name": "DAVINCI_003_COMPLETIONS_MODEL",
                            "value": "text-davinci-003"
                        } ,
                        {
                            "name": "DAVINCI_003_EMBEDDING_MODEL",
                            "value": "text-search-davinci-doc-001"
                        } ,
                        {
                            "name": "DAVINCI_003_QUERY_EMB_MODEL",
                            "value": "text-search-davinci-query-001"
                        } ,
                        {
                            "name": "DAVINCI_EMBEDDING_ENCODING",
                            "value": "p50k_base"
                        } ,
                        {
                            "name": "CHOSEN_EMB_MODEL",
                            "value": "text-embedding-ada-002"
                        } ,
                        {
                            "name": "SMALL_EMB_TOKEN_NUM",
                            "value": "125"
                        } ,
                        {
                            "name": "MEDIUM_EMB_TOKEN_NUM",
                            "value": "250"
                        } ,
                        {
                            "name": "LARGE_EMB_TOKEN_NUM",
                            "value": "500"
                        } ,
                        {
                            "name": "X_LARGE_EMB_TOKEN_NUM",
                            "value": "800"
                        } ,
                        {
                            "name": "NUM_TOP_MATCHES",
                            "value": "25"
                        },
                        {
                            "name": "FR_CONTAINER",
                            "value": "kmoaiforms"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "",
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2022-03-01",
            "name": "[concat(parameters('FunctionApp'), '/ftp')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('FunctionApp'))]"
            ],
            "tags": {

             },
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2022-03-01",
            "name": "[concat(parameters('FunctionApp'), '/scm')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('FunctionApp'))]"
            ],
            "tags": {

                    },
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2022-03-01",
            "name": "[concat(parameters('FunctionApp'), '/web')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('FunctionApp'))]"
            ],
            "tags": {

               },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "PYTHON|3.9",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$km-aoi-funcapp",
                "scmType": "None",
                "use32BitWorkerProcess": false,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "cors": {
                    "allowedOrigins": [
                        "https://portal.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 1,
                "functionAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2022-03-01",
            "name": "[concat(parameters('FunctionApp'), '/', parameters('FunctionApp'), '.azurewebsites.net')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('FunctionApp'))]"
            ],
            "properties": {
                "siteName": "km-aoi-funcapp",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2022-11-15",
            "name": "[concat(parameters('Cosmos'), '/KM_OAI_DB/documents')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('Cosmos'), 'KM_OAI_DB')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos'))]"
            ],
            "properties": {
                "resource": {
                    "id": "documents",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/categoryId"
                        ],
                        "kind": "Hash",
                        "version": 2
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                }
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2022-06-15",
            "name": "[concat(parameters('EventGrid'), '/km-oai-new-document-event')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', parameters('EventGrid'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces/queues', parameters('ServiceBus'), 'km-oai-processing-queue')]"
            ],
            "properties": {
                "destination": {
                    "properties": {
                        "resourceId": "[resourceId('Microsoft.ServiceBus/namespaces/queues', parameters('ServiceBus'), 'km-oai-processing-queue')]"
                    },
                    "endpointType": "ServiceBusQueue"
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated",
                        "Microsoft.Storage.BlobDeleted"
                    ],
                    "enableAdvancedFilteringOnArrays": true,
                    "advancedFilters": [
                        {
                            "values": [
                                "/blobServices/default/containers/kmoaiprocessed/blobs"
                            ],
                            "operatorType": "StringBeginsWith",
                            "key": "Subject"
                        },
                        {
                            "values": [
                                "FlushWithClose",
                                "PutBlob",
                                "PutBlockList",
                                "CopyBlob"
                            ],
                            "operatorType": "StringContains",
                            "key": "data.api"
                        }
                    ]
                },
                "labels": [],
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccount'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccount'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default/kmoaidemo')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccount'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default/kmoaiprocessed')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccount'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default/kmoaiforms')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccount'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default/ms-az-cognitive-search-debugsession')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccount'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('StorageAccount'), '/default/scm-releases')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccount'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ],
    "outputs": {
        "EnvironmentVariableCOG_SEARCH_ENDPOINT": {
            "type": "string",
            "value": "[concat('https://', parameters('CognitiveSearch'), '.search.windows.net')]"
        },
        "EnvironmentVariableCOG_SEARCH_ADMIN_KEY": {
            "type": "string",
            "value":"[listAdminKeys(parameters('CognitiveSearch'), '2022-09-01').primaryKey]"
        },
        "EnvironmentVariableCOG_SERV_ENDPOINT": {
            "type": "string",
            "value": "[concat('https://', parameters('CognitiveServices'), '.cognitiveservices.azure.com/')]"
        },
        "EnvironmentVariableCOG_SERV_KEY": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('CognitiveServices')), '2021-10-01').key1]"
        },
        "EnvironmentVariableKB_BLOB_CONN_STR": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccount'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount')), '2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
        },
        "EnvironmentVariableREDIS_ADDR": {
            "type": "string",
            "value": "[ if(equals(parameters('DeployNewRedisResource'),'yes'), concat( parameters('RedisEnterprise'), '.', resourceGroup().location, '.redisenterprise.cache.azure.net'), '')]"
        },
        "EnvironmentVariableREDIS_PASSWORD": {
            "type": "string",
            "value": "[  if(equals(parameters('DeployNewRedisResource'),'yes'), listKeys(resourceId('Microsoft.Cache/RedisEnterprise/databases', parameters('RedisEnterprise'),  'default'), '2022-01-01').primaryKey, '')]"
        }
    }
}


